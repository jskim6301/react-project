재조정(Reconcilication)
React는 선언적 API를 제공하기 때문에 갱신이 될 때마다 매번 무엇이 바뀌었는지를 걱정할 필요가 없다.
이는 애플리케이션 작성을 무척 쉽게 만들어주지만, React 내부에서 어떤 일이 일어나고 있는지 명확히 눈에 
보이지 않는다.
비교(diffing)알고리즘을 만들 때 어떤 선택을 했는지 소개.
이 비교알고리즘 덕분에 컴포넌트의 갱신이 예측 가능해지면서도 고성능 앱이라 불러도 손색없을 만큼 충분히 빠른
앱을 만들 수 있다.

동기
React를 사용하다 보면 'render() 함수는 React 엘리먼트 트리를 만드는 것이다'라고 생각이 드는 순간이
있다.
state나 props가 갱신되면 render()함수는 새로운 React 엘리먼트 트리를 반환할 것이다.
이때 React는 방금 만들어진 트리에 맞게 가장 효과적으로 UI를 갱신하는 방법을 알아낼 필요가 있다.

